/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#include <locale/keys_de.h>

#define BASE_LAYER 0
#define SYM_LAYER 1
#define NAV_LAYER 2
#define NUM_LAYER 3

#define KP_LT_FIX DE_CARET
#define KP_CARET_FIX DE_LT


/ {
        behaviors {
                hm: homerow_mods {
                compatible = "zmk,behavior-hold-tap";
                #binding-cells = <2>;
                tapping-term-ms = <160>;
                quick-tap-ms = <0>;
                flavor = "balanced";
                bindings = <&kp>, <&kp>;
                };
        };

        keymap {
                compatible = "zmk,keymap";

                default_layer {
                    display-name = "Base";
// -------------------------------------------------------------------------------
// | ESC  |  Q  |  W  |  E  |  R  |  T  |   |  Z  |  U   |  I  |  O  |  P  |  Ü  |
// | DEL  |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  Ö  |  Ä  |
// |      |  Y  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  -  | TAB |
//                    | SYM | BCK | NAV |   | ENT | SPC  | NUM |
                        bindings = <
   &kp ESC   &kp DE_Q         &kp DE_W        &kp DE_E          &kp DE_R        &kp DE_T             &kp DE_Z   &kp DE_U        &kp DE_I          &kp DE_O        &kp DE_P                &kp DE_U_UMLAUT
   &kp DEL   &hm LCTRL DE_A   &hm LALT DE_S   &hm LSHIFT DE_D   &hm LGUI DE_F   &kp DE_G             &kp DE_H   &hm RGUI DE_J   &hm RSHIFT DE_K   &hm RALT DE_L   &hm RCTRL DE_O_UMLAUT   &kp DE_A_UMLAUT
   &none     &kp DE_Y         &kp DE_X        &kp DE_C          &kp DE_V        &kp DE_B             &kp DE_N   &kp DE_M        &kp DE_COMMA      &kp DE_DOT      &kp DE_MINUS             &kp TAB
                                              &mo SYM_LAYER     &kp BSPC        &mo NAV_LAYER        &kp RET    &kp SPACE       &mo NUM_LAYER
                        >;
                };


                sym {
// -------------------------------------------------------------------------------
// |   ß  |  €  |  #  |  '  |     |     |   |  ?  |  {  |  }  |  *  |  /  |   \  |
// |   ^  |  <  |  >  |  [  |  ]  |  &  |   |  "  |  (  |  )  |  +  |  =  |   @  |
// |   °  |  §  |  $  |  `  |     |  %  |   |  !  | "|" |  ;  |  :  |  _  |   ~  |
//                    | SYM | BCK |     |   | ENT | SPC |     |
                        bindings = <
   &kp DE_SHARP_S     &kp DE_EURO     &kp DE_HASH     &kp DE_SQT      &none           &none               &kp DE_QMARK   &kp LA(DE_N8)   &kp LA(DE_N9)   &kp DE_STAR    &kp DE_FSLH    &kp LS(LA(DE_N7))
   &kp DE_CARET_FIX   &kp DE_LT_FIX   &kp DE_GT       &kp LA(DE_N5)   &kp LA(DE_N6)   &kp DE_AMPS         &kp DE_DQT     &kp DE_LPAR     &kp DE_RPAR     &kp DE_PLUS    &kp DE_EQUAL   &kp LA(DE_L)
   &kp DE_DEG         &kp DE_SECT     &kp DE_DOLLAR   &kp DE_GRAVE    &none           &kp DE_PRCNT        &kp DE_EXCL    &kp LA(DE_N7)   &kp DE_SEMI     &kp DE_COLON   &kp DE_UNDER   &kp LA(DE_N)
                                                      &trans          &trans          &none               &trans         &trans          &none
                        >;
                };

                nav {
// ------------------------------------------------------------------------------
// |      |     | CUT |COPY |PASTE|     |   |PG UP| HOME| END | APP |     |     |
// |      |LCTRL| ALT |SHIFT| GUI |     |   |PG DW|  <- |  v  | / \ | ->  |     |
// |      |     |     |     |     |     |   |     |     |     |     |     |     |
//                    |     | BCK | NAV |   | ENT | SPC |     |
                        bindings = <
   &none   &none       &kp LG(DE_X)   &kp LG(DE_C)   &kp LG(DE_V)   &none         &kp PG_UP   &kp HOME   &kp END    &kp K_APP   &none       &none
   &none   &kp LCTRL   &kp LALT       &kp LSHIFT     &kp LGUI       &none         &kp PG_DN   &kp LEFT   &kp DOWN   &kp UP      &kp RIGHT   &none
   &none   &none       &none          &none          &none          &none         &none       &none      &none      &none       &none       &none
                                      &none          &kp BSPC       &trans        &trans      &trans     &none
                        >;
                };


                num {
// ------------------------------------------------------------------------------
// |  F1  |  F4 |  1  |  2  |  3  |  +  |   |  F7 |  F8 |  F9 | F10 | F11 | F12 |
// |  F2  |  F5 |  4  |  5  |  6  |  0  |   |  *  |PLAY |Vol D|Vol U|PrevS|NextS|
// |  F3  |  F6 |  7  |  8  |  9  |  -  |   |  /  |MUTE |     |     |     |     |
//                    |     | BCK |     |   | ENT | SPC | NUM |
                        bindings = <
   &kp F1   &kp F4   &kp DE_N1   &kp DE_N2   &kp DE_N3   &kp DE_PLUS         &kp F7        &kp F8             &kp F9         &kp F10        &kp F11      &kp F12
   &kp F2   &kp F5   &kp DE_N4   &kp DE_N5   &kp DE_N6   &kp DE_N0           &kp DE_STAR   &kp C_PLAY_PAUSE   &kp C_VOL_DN   &kp C_VOL_UP   &kp C_PREV   &kp C_NEXT
   &kp F3   &kp F6   &kp DE_N7   &kp DE_N8   &kp DE_N9   &kp DE_MINUS        &kp DE_FSLH   &kp C_MUTE         &none          &none          &none        &none
                                 &none       &kp BSPC    &none               &trans        &trans             &trans
                        >;
                };
        };
};
