/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define BASE_LAYER 0
#define SYM_LAYER 1
#define NAV_LAYER 2
#define NUM_LAYER 2

/ {
        behaviors {
                hm: homerow_mods {
                compatible = "zmk,behavior-hold-tap";
                #binding-cells = <2>;
                tapping-term-ms = <150>;
                quick-tap-ms = <0>;
                flavor = "tap-preferred";
                bindings = <&kp>, <&kp>;
                };
        };

        keymap {
                compatible = "zmk,keymap";

                base {
                    display-name = "Base";
// -------------------------------------------------------------------------------
// | ESC  |  Q  |  W  |  E  |  R  |  T  |   |  Z  |  U   |  I  |  O  |  P  |  Ü  |
// | TAB  |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  Ö  |  Ä  |
// |      |  Y  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  -  | DEL |
//                    | SYM | BCK | NAV |   | ENT | SPC  | NUM |
                        bindings = <
   &kp ESC   &kp Q      &kp W      &kp E          &kp R        &kp T           &kp Z   &kp U       &kp I           &kp O        &kp P              &kp LC(LS(U))
   &kp TAB   &hm LGUI A &hm LALT S &hm LSHIFT D   &hm LCTRL F  &kp G           &kp H   &hm LCTRL J &hm LSHIFT K    &hm LALT L   &hm LGUI LC(LS(O)) &kp LC(LS(A))
   &none     &kp Y      &kp X      &kp C          &kp V        &kp B           &kp N   &kp M       &kp COMMA       &kp DOT      &kp MINUS          &kp DEL
                                   &mo SYM_LAYER  &kp BSPC     &mo NAV_LAYER   &kp RET &kp SPACE   &mo NUM_LAYER
                        >;
                };


                sym {
// -------------------------------------------------------------------------------
// |   ^  |  €  |  #  |  [  |  ]  |  !  |   |  ?  |  {  |  }  |  *  |  /  |   \  |
// |      |     |  `  |  '  |  =  |  &  |   |  "  |  (  |  )  |  +  | "|" |      |
// |   §  |  $  |  <  |  >  |     |  %  |   |  @  |     |  ;  |  :  |  _  |   ~  |
//                    | SYM | BCK |     |   | ENT | SPC |     |
                        bindings = <
   //&kp CARET  &text "€"  &kp HASH    &kp LBKT    &kp RBKT   &kp EXCL       &kp QMARK   &kp LEFT_BRACE   &kp RIGHT_BRACE   &kp STAR  &kp FSLH    &kp BSLH
   &none &none &none &none &none &none &none &none &none &none &none &none
   &none      &none      &kp GRAVE   &kp SQT     &kp EQUAL  &kp AMPS       &kp DQT     &kp LPAR         &kp RPAR          &kp PLUS  &kp PIPE    &none
   //&text "§"  &kp DOLLAR &kp LT      &kp GT      &none      &kp PRCNT      &kp AT      &none            &kp SEMI          &kp COLON &kp UNDER   &kp TILDE
   &none  &kp DOLLAR &kp LT      &kp GT      &none      &kp PRCNT      &kp AT      &none            &kp SEMI          &kp COLON &kp UNDER   &kp TILDE
                                     &trans      &trans     &none          &trans      &trans           &none
                        >;
                };

                nav {
// ------------------------------------------------------------------------------
// |      |     |     |     |     |     |   |PG UP| HOME| / \ | END |     |     |
// |      |     |CTRLA|CTRLE| SELL| SELR|   |PG DW|  <- |  v  | ->  |CTRLZ|CTRLF|
// |      |     |     |     |     |     |   |     |SELWB|SELWF|     |     |     |
//                    |     | BCK | NAV |   | ENT | SPC |     |
                        bindings = <
   &none     &none   &none           &none           &none                    &none                     &kp PG_UP      &kp HOME          &kp UP              &kp END         &none           &none
   &none     &none   &hm LGUI LC(A)  &hm LALT LC(E)  &hm LSHIFT LC(LS(LEFT))  &hm LCTRL LC(LS(RIGHT))   &kp PG_DN      &hm LCTRL LEFT    &hm LSHIFT DOWN     &hm LALT RIGHT  &hm LGUI LC(Z)  &kp LC(Y)
   &none     &none   &none           &none           &none                    &none                     &none          &kp LA(LS(LEFT))  &kp LA(LS(RIGHT))   &none           &none           &none
                                     &none           &kp BSPC                 &trans                    &trans         &trans            &none
                        >;
                };


                num {
// ------------------------------------------------------------------------------
// |  F1  |  F2 |  F3 |  F4 |  F5 |  F6 |   |  F7 |  F8 |  F9 | F10 | F11 | F12 |
// |   +  |  1  |  2  |  3  |  4  |  5  |   |  *  |PLAY |Vol D|Vol U|PrevS|NextS|
// |   -  |  6  |  7  |  8  |  9  |  0  |   |  /  |MUTE |     |     |     |     
//                    |     | BCK |     |   | ENT | SPC | NUM |
                        bindings = <
   &kp F1    &kp F2  &kp F3   &kp F4  &kp F5            &kp F6                 &kp F7    &kp F8            &kp F9           &kp F10      &kp F11    &kp F12
   &kp PLUS  &kp N1  &kp N2   &kp N3  &kp N4            &kp N5                 &kp STAR  &kp C_PLAY_PAUSE  &kp C_VOL_DN     &kp C_VOL_UP &kp C_PREV &kp C_NEXT
   &kp MINUS &kp N6  &kp N7   &kp N8  &kp N9            &kp N0                 &kp FSLH  &kp C_MUTE        &none            &none        &none      &none
                              &none   &kp BSPC          &none                  &trans    &trans            &trans
                        >;
                };
        };
};
